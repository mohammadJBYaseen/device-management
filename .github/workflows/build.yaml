# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: device-management

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
      - labeled

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Set up Go
        uses: actions/setup-go@v5.1.0
        with:
          go-version: '1.22.3'
      - name: Run DB
        id: runDB
        run: |
          echo "$(pwd)"
          echo "download migrate"
          sudo curl -L https://packagecloud.io/golang-migrate/migrate/gpgkey | apt-key add -
          sudo echo "deb https://packagecloud.io/golang-migrate/migrate/ubuntu/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/migrate.list
          echo "apt-get update"
          sudo apt-get update
          echo "sudo apt-get install -y migrate"
          sudo apt-get install -y migrate
          make run-ci

      - name: Build
        if: success()
        run: |
          echo "$(pwd)"
          go build -v -buildvcs=false ./...

      - name: Test
        if: success()
        run: |
          echo "$(pwd)"
          go test -v -buildvcs=false ./...
      - name: Tear Down DB
        if: steps.runDB.conclusion =='success'
        run: |
          echo "$(pwd)"
          make dev-db-docker-delete
